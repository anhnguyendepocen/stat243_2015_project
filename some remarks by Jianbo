install.packages(numDeriv)

1. Our package requires another package numDeriv, please add it into the installation manual.

2. One main benefit of the adaptive rejection sampling is that it tries to evaluate the function values as few times as possible. In Huber's lupdater function and in Wilson's calculation of s function, h is evaluated twice at every point. So what I did is trying to take away a redumdent evaluation. I did this by adding another argument h_Tk in Huber's lupdater function.
 
I also wrote two functions for the updating step, "update" and "update_coef". For the same reason, I update Tk and "coefficients" by just evaluating the function value and the gradient of the added point. 

3. I package Wilson's codes of calculating norm constant and z into two functions. One problem I met is norm-constant is often inf, due to the fact the denominator is often zero in the calculation. I didn't solve that problem yet. 




